{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardRegionsComponent = class DashboardRegionsComponent {\n  constructor(regionService, paysService, router, tokenStorage) {\n    this.regionService = regionService;\n    this.paysService = paysService;\n    this.router = router;\n    this.tokenStorage = tokenStorage;\n    this.listregions = [];\n    this.listepays = [];\n    this.reg = [{\n      \"codeRegion\": this.codeRegion,\n      \"nomRegion\": this.nomRegion,\n      \"descriptionRegion\": this.descriptionRegion,\n      \"domaineActiviteRegion\": this.domaineActiviteRegion,\n      \"superficie\": this.superficie,\n      \"langueMajoritaire\": this.langueMajoritaire\n    }];\n  }\n  ngOnInit() {\n    //==========Recuperation de user conecter=========\n    this.user = this.tokenStorage.getUser().id;\n    console.log(\"id user \" + this.user);\n    this.accessToken = this.tokenStorage.getUser().accessToken;\n    console.log(\"token du user \" + this.accessToken);\n    this.listeRegion();\n    this.ListPays();\n  }\n  ListPays() {\n    this.paysService.listePays().subscribe(data => {\n      console.log(data);\n      this.listepays = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  //Liste de tout les regions\n  listeRegion() {\n    this.regionService.liste().subscribe(data => {\n      console.log(data);\n      this.listregions = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  //Recuperationn de l'image depuis la formulaire\n  recuperationImage(event) {\n    this.image = event.target[\"files\"][0];\n    console.log(this.image);\n  }\n  onCreate(idPays) {\n    console.log(this.idPays);\n    // const region = new Region(this.codeRegion, this.imageRegion, this.nomRegion, this.domaineActiviteRegion, this.superficie, this.langueMajoritaire);\n    // console.log(region);\n    this.regionService.Creer(this.image, this.codeRegion, this.nomRegion, this.descriptionRegion, this.domaineActiviteRegion, this.superficie, this.langueMajoritaire, this.idPays, this.accessToken).subscribe(data => {\n      // this.toastr.success('Region creer', 'OK', {\n      //   timeOut: 3000, positionClass: 'toast-top-center'\n      // });\n      console.log(data);\n      this.router.navigate(['/dashboard/region']);\n    }, err => {\n      // this.toastr.error(err.error.mensaje, 'Fail', {\n      //   timeOut: 3000,  positionClass: 'toast-top-center',\n      // });\n      // this.router.navigate(['/list']);\n    });\n  }\n};\nDashboardRegionsComponent = __decorate([Component({\n  selector: 'app-dashboard-regions',\n  templateUrl: './dashboard-regions.component.html',\n  styleUrls: ['./dashboard-regions.component.scss']\n})], DashboardRegionsComponent);","map":{"version":3,"names":["Component","DashboardRegionsComponent","constructor","regionService","paysService","router","tokenStorage","listregions","listepays","reg","codeRegion","nomRegion","descriptionRegion","domaineActiviteRegion","superficie","langueMajoritaire","ngOnInit","user","getUser","id","console","log","accessToken","listeRegion","ListPays","listePays","subscribe","data","err","liste","recuperationImage","event","image","target","onCreate","idPays","Creer","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/marytraore/ANGULAR_PROJECTS/GestionRegionV2/src/app/components/dashboard/dashboard-regions/dashboard-regions.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Pays } from 'src/app/Models/pays';\nimport { Region } from 'src/app/Models/region';\nimport { PaysService } from 'src/app/_services/pays/pays.service';\nimport { RegionService } from 'src/app/_services/regions/region.service';\n\n@Component({\n  selector: 'app-dashboard-regions',\n  templateUrl: './dashboard-regions.component.html',\n  styleUrls: ['./dashboard-regions.component.scss']\n})\nexport class DashboardRegionsComponent implements OnInit{\n\n  listregions: Region[] = [];\n  listepays: Pays[] = [];\n  fichier: any;\n  image: any;\n\n  codeRegion!: any;\n  imageRegion!: any;\n  nomRegion!: any;\n  domaineActiviteRegion!: any;\n  descriptionRegion!: any;\n  superficie !: any;\n  langueMajoritaire!: any;\n  pays : any;\n  createur : any;\n  idPays!: number;\n  accessToken:any;\n  user: any;\n\n  constructor(\n    private regionService: RegionService,\n    private paysService: PaysService,\n    private router: Router,\n    private tokenStorage: TokenStorageService\n    ){}\n  \n  ngOnInit(): void {\n        //==========Recuperation de user conecter=========\n        this.user = this.tokenStorage.getUser().id;\n        console.log(\"id user \"+this.user);\n    \n        this.accessToken = this.tokenStorage.getUser().accessToken;\n        console.log(\"token du user \"+this.accessToken)\n\n        \n    this.listeRegion();\n    this.ListPays();\n  }\n  \n  ListPays(): void {\n    this.paysService.listePays().subscribe(\n      data => {\n        console.log(data);\n        this.listepays = data;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n    //Liste de tout les regions\n    listeRegion(): void {\n      this.regionService.liste().subscribe(\n        data => {\n          console.log(data);\n          this.listregions = data;\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n\n\n\n  //Recuperationn de l'image depuis la formulaire\n  recuperationImage(event: any) {\n    this.image = event.target[\"files\"][0];\n    console.log(this.image)\n  }\n  reg =[{\n    \"codeRegion\": this.codeRegion,\n    \"nomRegion\":this.nomRegion,\n    \"descriptionRegion\": this.descriptionRegion,\n    \"domaineActiviteRegion\":this.domaineActiviteRegion,\n    \"superficie\":this.superficie,\n    \"langueMajoritaire\":this.langueMajoritaire\n  }]\n\n    onCreate(idPays: number) {\n      console.log(this.idPays)\n      // const region = new Region(this.codeRegion, this.imageRegion, this.nomRegion, this.domaineActiviteRegion, this.superficie, this.langueMajoritaire);\n      // console.log(region);\n      this.regionService.Creer(this.image,this.codeRegion,this.nomRegion,this.descriptionRegion,this.domaineActiviteRegion,this.superficie,this.langueMajoritaire,this.idPays,this.accessToken).subscribe(\n        data => {\n          // this.toastr.success('Region creer', 'OK', {\n          //   timeOut: 3000, positionClass: 'toast-top-center'\n          // });\n          console.log(data);\n          this.router.navigate(['/dashboard/region']);\n        },\n        err => {\n          // this.toastr.error(err.error.mensaje, 'Fail', {\n          //   timeOut: 3000,  positionClass: 'toast-top-center',\n          // });\n          // this.router.navigate(['/list']);\n        }\n      );\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}