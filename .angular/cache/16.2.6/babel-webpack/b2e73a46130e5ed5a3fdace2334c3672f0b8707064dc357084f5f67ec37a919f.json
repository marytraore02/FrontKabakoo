{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegionService {\n  constructor(http) {\n    this.http = http;\n    this.env = environment;\n  }\n  //Lister les regions\n  liste() {\n    return this.http.get(`${this.env.api}` + `/region/read`);\n  }\n  //Creation d'une region\n  Creer(file, codeRegion, nomRegion, descriptionRegion, domaineActiviteRegion, superficie, langueMajoritaire, id) {\n    const dat = new FormData();\n    dat.append('file', file);\n    let reg = [{\n      \"codeRegion\": codeRegion,\n      \"nomRegion\": nomRegion,\n      \"descriptionRegion\": descriptionRegion,\n      \"domaineActiviteRegion\": domaineActiviteRegion,\n      \"superficie\": superficie,\n      \"langueMajoritaire\": langueMajoritaire\n    }];\n    //data.append('data',activite);\n    console.log(\"Ce que j'envoi => \" + reg);\n    dat.append('data', JSON.stringify(reg).slice(1, JSON.stringify(reg).lastIndexOf(']')));\n    return this.http.post(`${this.env.api}/region/create/new/${nomPay}`, dat);\n  }\n  static #_ = this.ɵfac = function RegionService_Factory(t) {\n    return new (t || RegionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegionService,\n    factory: RegionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","RegionService","constructor","http","env","liste","get","api","Creer","file","codeRegion","nomRegion","descriptionRegion","domaineActiviteRegion","superficie","langueMajoritaire","id","dat","FormData","append","reg","console","log","JSON","stringify","slice","lastIndexOf","post","nomPay","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/marytraore/ANGULAR_PROJECTS/GestionRegionV2/src/app/_services/regions/region.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionService {\n  env=environment;\n\n  constructor(private http:HttpClient) { }\n\n    //Lister les regions\n    liste(): Observable<any> {\n      return this.http.get(`${this.env.api}` + `/region/read`);\n    }\n\n      \n  //Creation d'une region\n  Creer(file:any,codeRegion:any,nomRegion:any,descriptionRegion:any,domaineActiviteRegion:any,superficie:any,langueMajoritaire:any,id:any):Observable<any>{\n    const dat:FormData=new FormData();\n    dat.append('file',file);\n    let reg =[{\n      \"codeRegion\": codeRegion,\n      \"nomRegion\":nomRegion,\n      \"descriptionRegion\":descriptionRegion,\n      \"domaineActiviteRegion\":domaineActiviteRegion,\n      \"superficie\":superficie,\n      \"langueMajoritaire\":langueMajoritaire\n    }]\n    //data.append('data',activite);\n    console.log(\"Ce que j'envoi => \"+reg)\n    dat.append('data', JSON.stringify(reg).slice(1,JSON.stringify(reg).lastIndexOf(']')));\n    return this.http.post(`${this.env.api}/region/create/new/${nomPay}`,dat);\n  }\n\n\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAACJ,WAAW;EAEwB;EAErC;EACAK,KAAKA,CAAA;IACH,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,GAAG,CAACG,GAAG,EAAE,GAAG,cAAc,CAAC;EAC1D;EAGF;EACAC,KAAKA,CAACC,IAAQ,EAACC,UAAc,EAACC,SAAa,EAACC,iBAAqB,EAACC,qBAAyB,EAACC,UAAc,EAACC,iBAAqB,EAACC,EAAM;IACrI,MAAMC,GAAG,GAAU,IAAIC,QAAQ,EAAE;IACjCD,GAAG,CAACE,MAAM,CAAC,MAAM,EAACV,IAAI,CAAC;IACvB,IAAIW,GAAG,GAAE,CAAC;MACR,YAAY,EAAEV,UAAU;MACxB,WAAW,EAACC,SAAS;MACrB,mBAAmB,EAACC,iBAAiB;MACrC,uBAAuB,EAACC,qBAAqB;MAC7C,YAAY,EAACC,UAAU;MACvB,mBAAmB,EAACC;KACrB,CAAC;IACF;IACAM,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAACF,GAAG,CAAC;IACrCH,GAAG,CAACE,MAAM,CAAC,MAAM,EAAEI,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,CAACK,KAAK,CAAC,CAAC,EAACF,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,CAACM,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IACrF,OAAO,IAAI,CAACvB,IAAI,CAACwB,IAAI,CAAC,GAAG,IAAI,CAACvB,GAAG,CAACG,GAAG,sBAAsBqB,MAAM,EAAE,EAACX,GAAG,CAAC;EAC1E;EAAC,QAAAY,CAAA,G;qBA3BU5B,aAAa,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbjC,aAAa;IAAAkC,OAAA,EAAblC,aAAa,CAAAmC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}