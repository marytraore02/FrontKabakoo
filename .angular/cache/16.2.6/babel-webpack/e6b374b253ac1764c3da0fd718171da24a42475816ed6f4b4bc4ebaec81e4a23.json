{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PaysService {\n  constructor(http) {\n    this.http = http;\n    this.env = environment;\n  }\n  //Recuperer les pays\n  listePays() {\n    return this.http.get(`${this.env.api}` + `/pays/read`);\n  }\n  //Creation d'une region\n  Creer(file, nomPays, descriptionPays, superficiePays) {\n    const dat = new FormData();\n    dat.append('file', file);\n    let reg = [{\n      \"nomPays\": codeRegion,\n      \"descriptionPays\": nomRegion,\n      \"superficiePays\": descriptionRegion,\n      \"domaineActiviteRegion\": domaineActiviteRegion,\n      \"superficie\": superficie,\n      \"langueMajoritaire\": langueMajoritaire\n    }];\n    //data.append('data',activite);\n    console.log(\"Ce que j'envoi => \" + reg);\n    dat.append('data', JSON.stringify(reg).slice(1, JSON.stringify(reg).lastIndexOf(']')));\n    return this.http.post(`${this.env.api}/region/create/new/${idPays}`, dat);\n  }\n  static #_ = this.ɵfac = function PaysService_Factory(t) {\n    return new (t || PaysService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaysService,\n    factory: PaysService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","PaysService","constructor","http","env","listePays","get","api","Creer","file","nomPays","descriptionPays","superficiePays","dat","FormData","append","reg","codeRegion","nomRegion","descriptionRegion","domaineActiviteRegion","superficie","langueMajoritaire","console","log","JSON","stringify","slice","lastIndexOf","post","idPays","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/marytraore/ANGULAR_PROJECTS/GestionRegionV2/src/app/_services/pays/pays.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pays } from 'src/app/Models/pays';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaysService {\n\n  env=environment;\n\n  constructor(private http:HttpClient) { }\n\n  //Recuperer les pays\n  listePays(): Observable<Pays[]> {\n    return this.http.get<Pays[]>(`${this.env.api}` + `/pays/read`);\n  }\n\n  //Creation d'une region\n  Creer(file:any,nomPays:any,descriptionPays:any,superficiePays:any):Observable<any>{\n    const dat:FormData=new FormData();\n    dat.append('file',file);\n    let reg =[{\n      \"nomPays\": codeRegion,\n      \"descriptionPays\":nomRegion,\n      \"superficiePays\":descriptionRegion,\n      \"domaineActiviteRegion\":domaineActiviteRegion,\n      \"superficie\":superficie,\n      \"langueMajoritaire\":langueMajoritaire\n    }]\n    //data.append('data',activite);\n    console.log(\"Ce que j'envoi => \"+reg)\n    dat.append('data', JSON.stringify(reg).slice(1,JSON.stringify(reg).lastIndexOf(']')));\n    return this.http.post(`${this.env.api}/region/create/new/${idPays}`,dat);\n  }\n\n\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAACJ,WAAW;EAEwB;EAEvC;EACAK,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,GAAG,CAACG,GAAG,EAAE,GAAG,YAAY,CAAC;EAChE;EAEA;EACAC,KAAKA,CAACC,IAAQ,EAACC,OAAW,EAACC,eAAmB,EAACC,cAAkB;IAC/D,MAAMC,GAAG,GAAU,IAAIC,QAAQ,EAAE;IACjCD,GAAG,CAACE,MAAM,CAAC,MAAM,EAACN,IAAI,CAAC;IACvB,IAAIO,GAAG,GAAE,CAAC;MACR,SAAS,EAAEC,UAAU;MACrB,iBAAiB,EAACC,SAAS;MAC3B,gBAAgB,EAACC,iBAAiB;MAClC,uBAAuB,EAACC,qBAAqB;MAC7C,YAAY,EAACC,UAAU;MACvB,mBAAmB,EAACC;KACrB,CAAC;IACF;IACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAACR,GAAG,CAAC;IACrCH,GAAG,CAACE,MAAM,CAAC,MAAM,EAAEU,IAAI,CAACC,SAAS,CAACV,GAAG,CAAC,CAACW,KAAK,CAAC,CAAC,EAACF,IAAI,CAACC,SAAS,CAACV,GAAG,CAAC,CAACY,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IACrF,OAAO,IAAI,CAACzB,IAAI,CAAC0B,IAAI,CAAC,GAAG,IAAI,CAACzB,GAAG,CAACG,GAAG,sBAAsBuB,MAAM,EAAE,EAACjB,GAAG,CAAC;EAC1E;EAAC,QAAAkB,CAAA,G;qBA3BU9B,WAAW,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnC,WAAW;IAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}