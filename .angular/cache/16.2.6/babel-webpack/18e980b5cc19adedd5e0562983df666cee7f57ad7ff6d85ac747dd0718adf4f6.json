{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardRegionsComponent = class DashboardRegionsComponent {\n  constructor(regionService, paysService, router) {\n    this.regionService = regionService;\n    this.paysService = paysService;\n    this.router = router;\n    this.reg = [{\n      \"codeRegion\": this.codeRegion,\n      \"nomRegion\": this.nomRegion,\n      \"descriptionRegion\": this.descriptionRegion,\n      \"domaineActiviteRegion\": this.domaineActiviteRegion,\n      \"superficie\": this.superficie,\n      \"langueMajoritaire\": this.langueMajoritaire\n    }];\n  }\n  ngOnInit() {\n    this.listeRegion();\n  }\n  ListPays() {\n    this.paysService.listePays().subscribe(data => {\n      console.log(data);\n      this.listepays = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  //Liste de tout les regions\n  listeRegion() {\n    this.regionService.liste().subscribe(data => {\n      console.log(data);\n      this.listregions = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  recuperationImage(event) {\n    this.image = event.target[\"files\"][0];\n    console.log(this.image);\n  }\n  onCreate() {\n    console.log(this.reg);\n    console.log(this.idPays);\n    // const region = new Region(this.codeRegion, this.imageRegion, this.nomRegion, this.domaineActiviteRegion, this.superficie, this.langueMajoritaire);\n    // console.log(region);\n    this.regionService.Creer(this.image, this.codeRegion, this.nomRegion, this.descriptionRegion, this.domaineActiviteRegion, this.superficie, this.langueMajoritaire, this.idPays).subscribe(data => {\n      // this.toastr.success('Region creer', 'OK', {\n      //   timeOut: 3000, positionClass: 'toast-top-center'\n      // });\n      console.log(data);\n      this.router.navigate(['/list']);\n    }, err => {\n      this.toastr.error(err.error.mensaje, 'Fail', {\n        timeOut: 3000,\n        positionClass: 'toast-top-center'\n      });\n      this.router.navigate(['/list']);\n    });\n  }\n};\nDashboardRegionsComponent = __decorate([Component({\n  selector: 'app-dashboard-regions',\n  templateUrl: './dashboard-regions.component.html',\n  styleUrls: ['./dashboard-regions.component.scss']\n})], DashboardRegionsComponent);","map":{"version":3,"names":["Component","DashboardRegionsComponent","constructor","regionService","paysService","router","reg","codeRegion","nomRegion","descriptionRegion","domaineActiviteRegion","superficie","langueMajoritaire","ngOnInit","listeRegion","ListPays","listePays","subscribe","data","console","log","listepays","err","liste","listregions","recuperationImage","event","image","target","onCreate","idPays","Creer","navigate","toastr","error","mensaje","timeOut","positionClass","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/marytraore/ANGULAR_PROJECTS/GestionRegionV2/src/app/components/dashboard/dashboard-regions/dashboard-regions.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PaysService } from 'src/app/_services/pays/pays.service';\nimport { RegionService } from 'src/app/_services/regions/region.service';\n\n@Component({\n  selector: 'app-dashboard-regions',\n  templateUrl: './dashboard-regions.component.html',\n  styleUrls: ['./dashboard-regions.component.scss']\n})\nexport class DashboardRegionsComponent implements OnInit{\n\n  listregions: any;\n  listepays: any;\n  fichier: any;\n  image: any;\n\n  codeRegion!: any;\n  imageRegion!: any;\n  nomRegion!: any;\n  domaineActiviteRegion!: any;\n  descriptionRegion!: any;\n  superficie !: any;\n  langueMajoritaire!: any;\n  pays : any;\n  createur : any;\n  idPays!: number;\n\n  constructor(\n    private regionService: RegionService,\n    private paysService: PaysService,\n    private router: Router\n    ){}\n  \n  ngOnInit(): void {\n    this.listeRegion();\n  }\n  \n  ListPays(): void {\n    this.paysService.listePays().subscribe(\n      data => {\n        console.log(data);\n        this.listepays = data;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n    //Liste de tout les regions\n    listeRegion(): void {\n      this.regionService.liste().subscribe(\n        data => {\n          console.log(data);\n          this.listregions = data;\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n\n\n\n    recuperationImage(event: any) {\n      this.image = event.target[\"files\"][0];\n      console.log(this.image)\n    }\n    reg =[{\n      \"codeRegion\": this.codeRegion,\n      \"nomRegion\":this.nomRegion,\n      \"descriptionRegion\": this.descriptionRegion,\n      \"domaineActiviteRegion\":this.domaineActiviteRegion,\n      \"superficie\":this.superficie,\n      \"langueMajoritaire\":this.langueMajoritaire\n    }]\n\n    onCreate(): void {\n      console.log(this.reg)\n      console.log(this.idPays)\n      // const region = new Region(this.codeRegion, this.imageRegion, this.nomRegion, this.domaineActiviteRegion, this.superficie, this.langueMajoritaire);\n      // console.log(region);\n      this.regionService.Creer(this.image,this.codeRegion,this.nomRegion,this.descriptionRegion,this.domaineActiviteRegion,this.superficie,this.langueMajoritaire,this.idPays).subscribe(\n        data => {\n          // this.toastr.success('Region creer', 'OK', {\n          //   timeOut: 3000, positionClass: 'toast-top-center'\n          // });\n          console.log(data);\n          this.router.navigate(['/list']);\n        },\n        err => {\n          this.toastr.error(err.error.mensaje, 'Fail', {\n            timeOut: 3000,  positionClass: 'toast-top-center',\n          });\n          this.router.navigate(['/list']);\n        }\n      );\n    }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAkBpCC,YACUC,aAA4B,EAC5BC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,aAAa,GAAbA,aAAa;IACb,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAsCd,KAAAC,GAAG,GAAE,CAAC;MACJ,YAAY,EAAE,IAAI,CAACC,UAAU;MAC7B,WAAW,EAAC,IAAI,CAACC,SAAS;MAC1B,mBAAmB,EAAE,IAAI,CAACC,iBAAiB;MAC3C,uBAAuB,EAAC,IAAI,CAACC,qBAAqB;MAClD,YAAY,EAAC,IAAI,CAACC,UAAU;MAC5B,mBAAmB,EAAC,IAAI,CAACC;KAC1B,CAAC;EA5CA;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACX,WAAW,CAACY,SAAS,EAAE,CAACC,SAAS,CACpCC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,SAAS,GAAGH,IAAI;IACvB,CAAC,EACDI,GAAG,IAAG;MACJH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CACF;EACH;EAEE;EACAR,WAAWA,CAAA;IACT,IAAI,CAACX,aAAa,CAACoB,KAAK,EAAE,CAACN,SAAS,CAClCC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACM,WAAW,GAAGN,IAAI;IACzB,CAAC,EACDI,GAAG,IAAG;MACJH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CACF;EACH;EAIAG,iBAAiBA,CAACC,KAAU;IAC1B,IAAI,CAACC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrCT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACO,KAAK,CAAC;EACzB;EAUAE,QAAQA,CAAA;IACNV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,GAAG,CAAC;IACrBa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACU,MAAM,CAAC;IACxB;IACA;IACA,IAAI,CAAC3B,aAAa,CAAC4B,KAAK,CAAC,IAAI,CAACJ,KAAK,EAAC,IAAI,CAACpB,UAAU,EAAC,IAAI,CAACC,SAAS,EAAC,IAAI,CAACC,iBAAiB,EAAC,IAAI,CAACC,qBAAqB,EAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,iBAAiB,EAAC,IAAI,CAACkB,MAAM,CAAC,CAACb,SAAS,CAChLC,IAAI,IAAG;MACL;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACb,MAAM,CAAC2B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACDV,GAAG,IAAG;MACJ,IAAI,CAACW,MAAM,CAACC,KAAK,CAACZ,GAAG,CAACY,KAAK,CAACC,OAAO,EAAE,MAAM,EAAE;QAC3CC,OAAO,EAAE,IAAI;QAAGC,aAAa,EAAE;OAChC,CAAC;MACF,IAAI,CAAChC,MAAM,CAAC2B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CACF;EACH;CAEH;AA1FY/B,yBAAyB,GAAAqC,UAAA,EALrCtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,C,EACWxC,yBAAyB,CA0FrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}