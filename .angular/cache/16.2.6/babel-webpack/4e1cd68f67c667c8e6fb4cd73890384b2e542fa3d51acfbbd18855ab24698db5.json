{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nexport let SignupComponent = class SignupComponent {\n  constructor(sourceFiles, authService, _toast, router) {\n    this.sourceFiles = sourceFiles;\n    this.authService = authService;\n    this._toast = _toast;\n    this.router = router;\n    this.form = {\n      username: null,\n      email: null,\n      password: null\n    };\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n    this.position = {\n      X: 'Right'\n    };\n    this.toasts = [{\n      title: 'Warning!',\n      content: 'There was a problem with your network connection.',\n      cssClass: 'e-toast-warning',\n      icon: 'e-warning toast-icons'\n    }, {\n      title: 'Success!',\n      content: 'Your message has been sent successfully.',\n      cssClass: 'e-toast-success',\n      icon: 'e-success toast-icons'\n    }, {\n      title: 'Error!',\n      content: 'A problem has been occurred while submitting your data.',\n      cssClass: 'e-toast-danger',\n      icon: 'e-error toast-icons'\n    }, {\n      title: 'Information!',\n      content: 'Please read the comments carefully.',\n      cssClass: 'e-toast-info',\n      icon: 'e-info toast-icons'\n    }];\n  }\n  ngOnInit() {}\n  onSubmit() {\n    const {\n      username,\n      email,\n      password\n    } = this.form;\n    this.authService.register(username, email, password).subscribe({\n      next: data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.showSuccess();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    });\n    this.navigateAdmin();\n  }\n  showSuccess() {\n    this._toast.success('User Data Successfully Added');\n  }\n  // Redirection\n  navigateAdmin() {\n    this.router.navigateByUrl('/login');\n  }\n};\n__decorate([ViewChild('toasttype')], SignupComponent.prototype, \"toastObj\", void 0);\n__decorate([ViewChild('infoToast')], SignupComponent.prototype, \"btninfo\", void 0);\n__decorate([ViewChild('warningToast')], SignupComponent.prototype, \"btnwarn\", void 0);\n__decorate([ViewChild('errorToast')], SignupComponent.prototype, \"btnerr\", void 0);\n__decorate([ViewChild('successToast')], SignupComponent.prototype, \"btnsuccess\", void 0);\n__decorate([ViewChild('hideTosat')], SignupComponent.prototype, \"hidebtn\", void 0);\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n}), __param(0, Inject('sourceFiles'))], SignupComponent);","map":{"version":3,"names":["Component","ViewChild","SignupComponent","constructor","sourceFiles","authService","_toast","router","form","username","email","password","isSuccessful","isSignUpFailed","errorMessage","position","X","toasts","title","content","cssClass","icon","ngOnInit","onSubmit","register","subscribe","next","data","console","log","showSuccess","error","err","message","navigateAdmin","success","navigateByUrl","__decorate","selector","templateUrl","styleUrls","__param","Inject"],"sources":["/Users/marytraore/ANGULAR_PROJECTS/GestionRegionV2/src/app/Auth/signup/signup.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/_services/auth/auth.service';\nimport { ButtonComponent } from '@syncfusion/ej2-angular-buttons';\nimport { ToastComponent, ToastCloseArgs, ToastPositionModel } from '@syncfusion/ej2-angular-notifications';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n\n  form: any = {\n    username: null,\n    email: null,\n    password: null,\n  };\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  @ViewChild('toasttype')\n  private toastObj!: ToastComponent;\n\n  @ViewChild('infoToast') \n  private btninfo!: ButtonComponent;\n\n  @ViewChild('warningToast') \n  private btnwarn!: ButtonComponent;\n\n  @ViewChild('errorToast') \n  private btnerr!: ButtonComponent;\n\n  @ViewChild('successToast')\n  private btnsuccess!: ButtonComponent;\n\n  @ViewChild('hideTosat')\n  private hidebtn!: ButtonComponent;\n\n  public position: ToastPositionModel = { X: 'Right' };\n\n  public toasts: { [key: string]: Object }[] = [\n    { title: 'Warning!', content: 'There was a problem with your network connection.', cssClass: 'e-toast-warning', icon: 'e-warning toast-icons' },\n    { title: 'Success!', content: 'Your message has been sent successfully.', cssClass: 'e-toast-success', icon: 'e-success toast-icons' },\n    { title: 'Error!', content: 'A problem has been occurred while submitting your data.', cssClass: 'e-toast-danger', icon: 'e-error toast-icons' },\n    { title: 'Information!', content: 'Please read the comments carefully.', cssClass: 'e-toast-info', icon: 'e-info toast-icons' }\n];\n\n  constructor(\n    @Inject('sourceFiles') private sourceFiles: any,\n    private authService: AuthService,\n    private _toast: ToastrService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    const { username, email, password } = this.form;\n\n    this.authService.register(username, email, password).subscribe({\n      next: (data) => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.showSuccess();\n      },\n      error: (err) => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      },\n    });\n    this.navigateAdmin();\n  }\n\n  public showSuccess(): void {\n    this._toast.success('User Data Successfully Added');\n  }\n\n    // Redirection\n    navigateAdmin() {\n      this.router.navigateByUrl('/login');\n    }\n\n    \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}